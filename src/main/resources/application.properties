spring.application.name=spring-ai-adventure
# Spring AI configuration.  Provide your OpenAI API key using an
# environment variable or secret manager.  The default model is
# gpt-4o, which has multimodal capabilities.  You can override
# spring.ai.openai.model via application properties or environment
# variables.
spring.ai.openai.api-key=${OPENAI_API_KEY:}
spring.ai.openai.model=gpt-4o

spring.ai.openai.image.options.size= 1024x1024
spring.ai.openai.image.options.quality= standard
spring.ai.openai.image.options.response_format= b64_json

# Reduce logging noise
logging.level.org.springframework.ai=INFO
logging.level.com.example=DEBUG

# Milvus vector store configuration.  These properties instruct Spring AI to
# connect to a local Milvus instance running in Docker.  The username and
# password correspond to the default credentials for the official Milvus
# container.  The collection name 'megalodon_features' is where the
# embeddings for the Megalodon car features will be stored.  Setting
# initialize-schema=true allows Spring AI to create the collection and
# index at startup if it does not exist.
spring.ai.vectorstore.milvus.client.host=localhost
spring.ai.vectorstore.milvus.client.port=19530
spring.ai.vectorstore.milvus.client.username=root
spring.ai.vectorstore.milvus.client.password=Milvus
spring.ai.vectorstore.milvus.database-name=default
spring.ai.vectorstore.milvus.collection-name=megalodon_features
spring.ai.vectorstore.milvus.embedding-dimension=1536
spring.ai.vectorstore.milvus.index-type=IVF_FLAT
spring.ai.vectorstore.milvus.metric-type=COSINE
spring.ai.vectorstore.milvus.initialize-schema=true

# Habilitar el modelo de voz de OpenAI (por defecto es openai)
spring.ai.model.audio.speech=openai

# Configuración por defecto del TTS; puedes ajustarla a tu gusto
spring.ai.openai.audio.speech.options.model=tts-1
spring.ai.openai.audio.speech.options.voice=alloy
spring.ai.openai.audio.speech.options.response-format=mp3
spring.ai.openai.audio.speech.options.speed=1.0

# Optional: increase similarity threshold for retrieval.  A lower value
# returns more documents; a higher value returns only very similar
# documents.  You can tune this value based on your use case.
#spring.ai.rag.similarity-threshold=0.5

spring.ai.retry.max-attempts=3
spring.ai.retry.backoff.initial-interval=2s
spring.ai.retry.backoff.multiplier=2
spring.ai.retry.backoff.max-interval=10s


